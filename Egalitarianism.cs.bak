using System;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Diagnostics;
using System.Collections.Generic;

public class Egalitarianism {
    public int maxDifference(string[] isFriend, int d) {
        int res = 0;
        for (int i = 0; i < isFriend.Length; i++)
        {
            for (int j = i+1; j < isFriend.Length; j++)
            {
                int dist = bfs(isFriend, i, j);
                if (dist == -1)
                    return -1;
                if(dist > res)
                    res = dist;
            } 
        }
        return res * d;
    }

    private int bfs(string[] isFriend, int i, int j)
    {
        if (i == j)
            return 0;
        int n = isFriend.Length;
        int[] v = new int[n];
        for (int k = 0; k < n; k++)
        {
            v[k] = -1;
        }
        List<int> q = new List<int>();
        q.Add(i);
        v[i] = 0;
        while (q.Count > 0)
        {
            for (int k = 0; k < n; k++)
            {
                if (v[k] == -1 && isFriend[q[0]][k] == 'Y')
                {
                    q.Add(k);
                    v[k] = v[q[0]] + 1;
                    if (k == j)
                        return v[k];
                }
            }
            q.RemoveAt(0);
        }
        return -1;
    }

}



// Powered by FileEdit
// Powered by CodeProcessor
